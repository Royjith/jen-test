pipeline {
    agent none // No global agent is defined; individual stages will define their own agents

    stages {
        stage('Terraform Init') {
            agent { label 'slave1' } // Run initialization on a dedicated slave
            steps {
                script {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            agent { label 'slave2' } // Run planning on another dedicated slave
            steps {
                script {
                    sh 'terraform plan'
                }
            }
        }

        stage('Parallel Terraform Apply') {
            parallel {
                stage('Apply on Slave 1') {
                    agent { label 'slave1' } // Run apply on the first slave
                    steps {
                        script {
                            // Apply Terraform configuration on Slave 1
                            // Adjust the target if needed to balance the load
                            sh 'terraform apply --auto-approve'
                        }
                    }
                }
                stage('Apply on Slave 2') {
                    agent { label 'slave2' } // Run apply on the second slave
                    steps {
                        script {
                            // Apply Terraform configuration on Slave 2
                            // Adjust the target if needed to balance the load
                            sh 'terraform apply --auto-approve'
                        }
                    }
                }
            }
        }

        stage('Terraform Destroy') {
            agent { label 'slave1' } // Run destroy on a dedicated slave
            steps {
                script {
                    sh 'terraform destroy --auto-approve'
                }
            }
        }
    }

    post {
        always {
            script {
                echo 'Pipeline completed.'
            }
        }
    }
}
