pipeline {
    agent none // No global agent is defined; individual stages will define their own agents

    stages {
        stage('Terraform Init') {
            agent {
                label 'slave1 || slave2' // Run initialization on either slave1 or slave2
            }
            steps {
                script {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            agent {
                label 'slave1 || slave2' // Run planning on either slave1 or slave2
            }
            steps {
                script {
                    sh 'terraform plan'
                }
            }
        }

        stage('Parallel Terraform Apply') {
            parallel {
                stage('Apply on Slave 1') {
                    agent {
                        label 'slave1' // Run apply on slave1
                    }
                    steps {
                        script {
                            // Apply Terraform configuration on Slave 1
                            sh 'terraform apply --auto-approve'
                        }
                    }
                }
                stage('Apply on Slave 2') {
                    agent {
                        label 'slave2' // Run apply on slave2
                    }
                    steps {
                        script {
                            // Apply Terraform configuration on Slave 2
                            sh 'terraform apply --auto-approve'
                        }
                    }
                }
            }
        }

        stage('Terraform Destroy') {
            agent {
                label 'slave1 || slave2' // Run destroy on either slave1 or slave2
            }
            steps {
                script {
                    sh 'terraform destroy --auto-approve'
                }
            }
        }
    }

    post {
        always {
            script {
                echo 'Pipeline completed.'
            }
        }
    }
}
